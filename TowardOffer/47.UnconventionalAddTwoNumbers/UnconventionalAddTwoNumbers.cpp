/***********************************************************************************************
问题描述：写一个函数，求两个整数之和，要求在函数体内不得使用+、-、*、/四则运算符号

思路分析： 不能使用+、-、*、/则使用位操作符，主要分为三步：
		   1.各位相加。（0各位相加；（0+0/1+1=0；0+1/1+0=1-->相同为0，相异为1<-->按位与操作）
		   2.进位值。（当两位均为1时，才需进位-->按位与操作，并左移一位，代表进位）   
		   3.1+2即得结果。
		   例：13+9=？ 13=1101,9=1001。（1.各位相加得：0100；2.进位值：10010；3.两值相加：10110=22）
***********************************************************************************************/
    int Add(int num1, int num2)
    {
        int sum=0,move=0;
        while(num2!=0){
            sum=num1^num2;           //①.各位相加；（0+0/1+1=0；0+1/1+0=1-->相同为0，相异为1<-->按位与操作）
            move=(num1&num2)<<1;     //②.进位；（当两位均为1时，才需进位-->按位与操作，并左移一位，代表进位）
            num1=sum;                //③.①+②--->类似第①步；故循环，直到进位为0时所得到的sum值即答案。
            num2=move;
        }
        return num1;
    }
    int Add2(int num1,int num2)
    {
        if(num2==0)
        {
            return num1;
        }
        return Add(num1^num2,(num1&num2)<<1);
    }
     int Add3(int num1,int num2)
    {
        return num2?Add(num1^num2,(num1&num2)<<1):num1;
    }
